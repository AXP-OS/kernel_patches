From b7045256c0641f8868215dce30e17dc9566b3f7e Mon Sep 17 00:00:00 2001
From: Sami Tolvanen <samitolvanen@google.com>
Date: Thu, 29 Dec 2016 03:05:34 -0800
Subject: [PATCH] Revert "FROMLIST: arm64: xen: Enable user access before a
 privcmd hvc call"

This reverts commit 7c1cf414a936d86b9344c0d0612fe27dc47ff8c4.

Bug: 31432001
Change-Id: I4e4fad2f02fb17ddfe9c17da904522567d7589d0
Signed-off-by: Sami Tolvanen <samitolvanen@google.com>
---
 arch/arm64/xen/hypercall.S | 19 -------------------
 1 file changed, 19 deletions(-)

diff --git a/arch/arm64/xen/hypercall.S b/arch/arm64/xen/hypercall.S
index 6d6e4af1a4bf..8bbe9401f4f0 100644
--- a/arch/arm64/xen/hypercall.S
+++ b/arch/arm64/xen/hypercall.S
@@ -49,7 +49,6 @@
 
 #include <linux/linkage.h>
 #include <asm/assembler.h>
-#include <asm/uaccess.h>
 #include <xen/interface/xen.h>
 
 
@@ -90,24 +89,6 @@ ENTRY(privcmd_call)
 	mov x2, x3
 	mov x3, x4
 	mov x4, x5
-#ifdef CONFIG_ARM64_SW_TTBR0_PAN
-	/*
-	 * Privcmd calls are issued by the userspace. The kernel needs to
-	 * enable access to TTBR0_EL1 as the hypervisor would issue stage 1
-	 * translations to user memory via AT instructions. Since AT
-	 * instructions are not affected by the PAN bit (ARMv8.1), we only
-	 * need the explicit uaccess_enable/disable if the TTBR0 PAN emulation
-	 * is enabled (it implies that hardware UAO and PAN disabled).
-	 */
-	uaccess_enable_not_uao x6, x7
-#endif
 	hvc XEN_IMM
-
-#ifdef CONFIG_ARM64_SW_TTBR0_PAN
-	/*
-	 * Disable userspace access from kernel once the hyp call completed.
-	 */
-	uaccess_disable_not_uao x6
-#endif
 	ret
 ENDPROC(privcmd_call);
