diff --git a/drivers/misc/google-easel-comm-dma.c b/drivers/misc/google-easel-comm-dma.c
index 8941080..afb1078 100644
--- a/drivers/misc/google-easel-comm-dma.c
+++ b/drivers/misc/google-easel-comm-dma.c
@@ -30,7 +30,7 @@
  */
 void easelcomm_handle_cmd_dma_sg(
 	struct easelcomm_service *service, char *command_args,
-	int command_arg_len)
+	size_t command_arg_len)
 {
 	struct easelcomm_dma_sg_header *sg_header;
 	void *cmd_sg;
@@ -106,7 +106,7 @@
  */
 void easelcomm_handle_cmd_dma_xfer(
 	struct easelcomm_service *service, char *command_args,
-	int command_arg_len)
+	size_t command_arg_len)
 {
 	struct easelcomm_dma_xfer_arg *dma_xfer;
 	struct easelcomm_message_metadata *msg_metadata;
@@ -158,7 +158,7 @@
  */
 void easelcomm_handle_cmd_dma_done(
 	struct easelcomm_service *service, char *command_args,
-	int command_arg_len)
+	size_t command_arg_len)
 {
 	struct easelcomm_dma_done_arg *dma_done_arg;
 	struct easelcomm_message_metadata *msg_metadata;
diff --git a/drivers/misc/google-easel-comm-private.h b/drivers/misc/google-easel-comm-private.h
index 1c5c8c3..a1a4406 100644
--- a/drivers/misc/google-easel-comm-private.h
+++ b/drivers/misc/google-easel-comm-private.h
@@ -199,15 +199,15 @@
 /* Handle DMA_SG command */
 extern void easelcomm_handle_cmd_dma_sg(
 	struct easelcomm_service *service, char *command_args,
-	int command_arg_len);
+	size_t command_arg_len);
 /* Handle DMA_XFER command */
 extern void easelcomm_handle_cmd_dma_xfer(
 	struct easelcomm_service *service, char *command_args,
-	int command_arg_len);
+	size_t command_arg_len);
 /* Handle DMA_DONE command */
 extern void easelcomm_handle_cmd_dma_done(
 	struct easelcomm_service *service, char *command_args,
-	int command_arg_len);
+	size_t command_arg_len);
 /* Handle RECVDMA ioctl */
 extern int easelcomm_receive_dma(
 	struct easelcomm_service *service,
@@ -232,7 +232,7 @@
 /* Start a new command to be sent to remote */
 extern int easelcomm_start_cmd(
 	struct easelcomm_service *service, int command_code,
-	int command_arg_len);
+	size_t command_arg_len);
 /* Add command arguments to the in-progress command */
 extern int easelcomm_append_cmd_args(
 	struct easelcomm_service *service, void *cmd_args,
diff --git a/drivers/misc/google-easel-comm.c b/drivers/misc/google-easel-comm.c
index 4217b1c..5bfae40 100644
--- a/drivers/misc/google-easel-comm.c
+++ b/drivers/misc/google-easel-comm.c
@@ -582,7 +582,7 @@
  */
 static void easelcomm_handle_cmd_send_msg(
 	struct easelcomm_service *service, char *command_args,
-	int command_arg_len)
+	size_t command_arg_len)
 {
 	struct easelcomm_kmsg *cmd_msg;
 	struct easelcomm_kmsg *new_msg;
@@ -681,7 +681,7 @@
  * channel.
  */
 static void easelcomm_handle_cmd_link_init(
-	char *command_args, int command_arg_len)
+	char *command_args, size_t command_arg_len)
 {
 	dev_dbg(easelcomm_miscdev.this_device, "recv cmd LINK_INIT\n");
 	easelcomm_cmd_channel_remote_set_ready();
@@ -1192,12 +1192,12 @@
  */
 int easelcomm_start_cmd(
 	struct easelcomm_service *service, int command_code,
-	int command_arg_len)
+	size_t command_arg_len)
 {
 	struct easelcomm_cmd_channel_remote *channel =
 		&cmd_channel_remote;
 	struct easelcomm_cmd_header cmdhdr;
-	unsigned int cmdbuf_size =
+	size_t cmdbuf_size =
 	    sizeof(struct easelcomm_cmd_header) + command_arg_len;
 	int ret;
 
@@ -1223,13 +1223,14 @@
 			goto error;
 	}
 
-	dev_dbg(easelcomm_miscdev.this_device, "cmdchan producer sending cmd seq#%llu svc=%u cmd=%u arglen=%u off=%llx\n",
+	dev_dbg(easelcomm_miscdev.this_device,
+		"cmdchan producer sending cmd seq#%llu svc=%u cmd=%u arglen=%zu off=%llx\n",
 		channel->write_seqnbr, service->service_id, command_code,
 		command_arg_len, channel->write_offset);
 	cmdhdr.service_id = service->service_id;
 	cmdhdr.sequence_nbr = channel->write_seqnbr;
 	cmdhdr.command_code = command_code;
-	cmdhdr.command_arg_len = command_arg_len;
+	cmdhdr.command_arg_len = (uint32_t)command_arg_len;
 
 	/*
 	 * Send the command header. Subsequent calls to
