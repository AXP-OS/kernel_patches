From 0c21aaa2fefa6c5919813fdd287436dddda54227 Mon Sep 17 00:00:00 2001
From: yeshwanth sriram guntuka <ysriramg@codeaurora.org>
Date: Thu, 24 Aug 2017 15:51:19 +0530
Subject: qcacld-3.0: Set length of challenge text sent by SAP to 128

SIR_MAC_AUTH_CHALLENGE_LENGTH is updated to 253 from
128 as per IEEE spec due to connection fails between
DUT-SAP and old ref-STA. Auth failure occurs as encrypted
data sent by ref-STA is only 128 bytes instead of 253
bytes.

Fix is to set length of challenge text sent by SAP
to 128 bytes.

Change-Id: I81409bb58ad34e469c54e2909f45b8a6826eb06a
CRs-Fixed: 2096512
---
 core/mac/inc/sir_mac_prot_def.h                  |  1 +
 core/mac/src/pe/lim/lim_process_auth_frame.c     | 12 ++++++------
 core/mac/src/pe/lim/lim_security_utils.h         |  6 ++++++
 core/mac/src/pe/lim/lim_send_management_frames.c | 10 ++++++----
 4 files changed, 19 insertions(+), 10 deletions(-)

diff --git a/core/mac/inc/sir_mac_prot_def.h b/core/mac/inc/sir_mac_prot_def.h
index 7e85578..c51e24f 100644
--- a/core/mac/inc/sir_mac_prot_def.h
+++ b/core/mac/inc/sir_mac_prot_def.h
@@ -553,6 +553,7 @@
 #define SIR_MAC_MAX_NUM_OF_DEFAULT_KEYS      4
 #define SIR_MAC_KEY_LENGTH                   13 /* WEP Maximum key length size */
 #define SIR_MAC_AUTH_CHALLENGE_LENGTH        253
+#define SIR_MAC_SAP_AUTH_CHALLENGE_LENGTH    128
 #define SIR_MAC_WEP_IV_LENGTH                4
 #define SIR_MAC_WEP_ICV_LENGTH               4
 #define SIR_MAC_CHALLENGE_ID_LEN             2
diff --git a/core/mac/src/pe/lim/lim_process_auth_frame.c b/core/mac/src/pe/lim/lim_process_auth_frame.c
index c87590e..fc061d2 100644
--- a/core/mac/src/pe/lim/lim_process_auth_frame.c
+++ b/core/mac/src/pe/lim/lim_process_auth_frame.c
@@ -200,7 +200,7 @@ static void lim_process_auth_shared_system_algo(tpAniSirGlobal mac_ctx,
 		 */
 		if (!QDF_IS_STATUS_SUCCESS(cds_rand_get_bytes(0,
 				(uint8_t *) challenge_txt_arr,
-				SIR_MAC_AUTH_CHALLENGE_LENGTH)))
+				SIR_MAC_SAP_AUTH_CHALLENGE_LENGTH)))
 			pe_err("Challenge text preparation failed");
 		challenge = auth_node->challengeText;
 		qdf_mem_copy(challenge, (uint8_t *)challenge_txt_arr,
@@ -213,10 +213,10 @@ static void lim_process_auth_shared_system_algo(tpAniSirGlobal mac_ctx,
 			rx_auth_frm_body->authTransactionSeqNumber + 1;
 		auth_frame->authStatusCode = eSIR_MAC_SUCCESS_STATUS;
 		auth_frame->type = SIR_MAC_CHALLENGE_TEXT_EID;
-		auth_frame->length = SIR_MAC_AUTH_CHALLENGE_LENGTH;
+		auth_frame->length = SIR_MAC_SAP_AUTH_CHALLENGE_LENGTH;
 		qdf_mem_copy(auth_frame->challengeText,
 				auth_node->challengeText,
-				SIR_MAC_AUTH_CHALLENGE_LENGTH);
+				SIR_MAC_SAP_AUTH_CHALLENGE_LENGTH);
 		lim_send_auth_mgmt_frame(mac_ctx, auth_frame,
 				mac_hdr->sa, LIM_NO_WEP_IN_FC,
 				pe_session);
@@ -273,7 +273,7 @@ static void lim_process_auth_frame_type1(tpAniSirGlobal mac_ctx,
 {
 	tpDphHashNode sta_ds_ptr = NULL;
 	struct tLimPreAuthNode *auth_node;
-	uint8_t challenge_txt_arr[SIR_MAC_AUTH_CHALLENGE_LENGTH];
+	uint8_t challenge_txt_arr[SIR_MAC_SAP_AUTH_CHALLENGE_LENGTH];
 	uint32_t maxnum_preauth;
 	uint16_t associd = 0;
 
@@ -870,7 +870,7 @@ static void lim_process_auth_frame_type3(tpAniSirGlobal mac_ctx,
 		 */
 		if (!qdf_mem_cmp(rx_auth_frm_body->challengeText,
 					auth_node->challengeText,
-					SIR_MAC_AUTH_CHALLENGE_LENGTH)) {
+					SIR_MAC_SAP_AUTH_CHALLENGE_LENGTH)) {
 			/*
 			 * Challenge match. STA is autheticated
 			 * Delete Authentication response timer if running
@@ -1201,7 +1201,7 @@ lim_process_auth_frame(tpAniSirGlobal mac_ctx, uint8_t *rx_pkt_info,
 			goto free;
 		}
 
-		if (frame_len < LIM_ENCR_AUTH_BODY_LEN) {
+		if (frame_len < LIM_ENCR_AUTH_BODY_LEN_SAP) {
 			/* Log error */
 			pe_err("Not enough size: %d to decry rx Auth frm",
 				frame_len);
diff --git a/core/mac/src/pe/lim/lim_security_utils.h b/core/mac/src/pe/lim/lim_security_utils.h
index d4b760d..ee42580 100644
--- a/core/mac/src/pe/lim/lim_security_utils.h
+++ b/core/mac/src/pe/lim/lim_security_utils.h
@@ -44,6 +44,12 @@
 				 SIR_MAC_WEP_IV_LENGTH + \
 				 SIR_MAC_WEP_ICV_LENGTH)
 
+#define LIM_ENCR_AUTH_BODY_LEN_SAP  (SIR_MAC_AUTH_FRAME_INFO_LEN + \
+				     SIR_MAC_SAP_AUTH_CHALLENGE_LENGTH + \
+				     SIR_MAC_CHALLENGE_ID_LEN + \
+				     SIR_MAC_WEP_IV_LENGTH + \
+				     SIR_MAC_WEP_ICV_LENGTH)
+
 #define LIM_ENCR_AUTH_INFO_LEN  (SIR_MAC_AUTH_FRAME_INFO_LEN +\
 				 SIR_MAC_WEP_IV_LENGTH + \
 				 SIR_MAC_WEP_ICV_LENGTH + \
diff --git a/core/mac/src/pe/lim/lim_send_management_frames.c b/core/mac/src/pe/lim/lim_send_management_frames.c
index 29c40f9..0f6d11d 100644
--- a/core/mac/src/pe/lim/lim_send_management_frames.c
+++ b/core/mac/src/pe/lim/lim_send_management_frames.c
@@ -2214,7 +2214,8 @@ lim_send_auth_mgmt_frame(tpAniSirGlobal mac_ctx,
 
 			challenge_req = true;
 			body_len = SIR_MAC_AUTH_FRAME_INFO_LEN +
-					SIR_MAC_AUTH_CHALLENGE_BODY_LEN;
+				   SIR_MAC_SAP_AUTH_CHALLENGE_LENGTH +
+				   SIR_MAC_CHALLENGE_ID_LEN;
 			frame_len = sizeof(tSirMacMgmtHdr) + body_len;
 		}
 		break;
@@ -2318,10 +2319,11 @@ alloc_packet:
 				*body = auth_frame->length;
 				body++;
 				qdf_mem_copy(body, auth_frame->challengeText,
-					     SIR_MAC_AUTH_CHALLENGE_LENGTH);
-				body += SIR_MAC_AUTH_CHALLENGE_LENGTH;
+					     SIR_MAC_SAP_AUTH_CHALLENGE_LENGTH);
+				body += SIR_MAC_SAP_AUTH_CHALLENGE_LENGTH;
 
-				body_len -= SIR_MAC_AUTH_CHALLENGE_BODY_LEN;
+				body_len -= SIR_MAC_SAP_AUTH_CHALLENGE_LENGTH +
+							SIR_MAC_CHALLENGE_ID_LEN;
 			}
 		}
 
-- 
cgit v1.1

