From 463c6aeebc0d76adbb889b553fca0ef15d66eb43 Mon Sep 17 00:00:00 2001
From: Gaoxiang Chen <gaochen@codeaurora.org>
Date: Fri, 31 Mar 2017 14:28:33 +0800
Subject: [PATCH] msm: camera: don't cut to 8bits for validating enum variable

In msm_ispif_is_intf_valid(),
we convert a enum variable msm_ispif_vfe_intf,
to uint8_t type for validating.

This could cause potential issue,
if the value is crafted in such a way that lower 8bits pass the validation.

Don't use uint8_t as input parm to avoid such vulnerability.

CRs-Fixed: 2008469
Change-Id: I4ee400ac0edd830decfbe5712966d968976a268a
Signed-off-by: Gaoxiang Chen <gaochen@codeaurora.org>
CVE-2017-8260
Signed-off-by: Kevin F. Haggerty <haggertk@lineageos.org>
---
 .../media/platform/msm/camera_v2/ispif/msm_ispif.c   | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/drivers/media/platform/msm/camera_v2/ispif/msm_ispif.c b/drivers/media/platform/msm/camera_v2/ispif/msm_ispif.c
index 8ffeee52718..e79e02c8397 100755
--- a/drivers/media/platform/msm/camera_v2/ispif/msm_ispif.c
+++ b/drivers/media/platform/msm/camera_v2/ispif/msm_ispif.c
@@ -95,7 +95,7 @@ static void msm_ispif_io_dump_start_reg(struct ispif_device *ispif)
 }
 
 static inline int msm_ispif_is_intf_valid(uint32_t csid_version,
-					  uint8_t intf_type)
+					  enum msm_ispif_vfe_intf intf_type)
 {
 	return ((csid_version <= CSID_VERSION_V2 && intf_type != VFE0) ||
 		(intf_type >= VFE_MAX)) ? false : true;
@@ -274,7 +274,7 @@ static int msm_ispif_subdev_g_chip_ident(struct v4l2_subdev *sd,
 }
 
 static void msm_ispif_sel_csid_core(struct ispif_device *ispif,
-				    uint8_t intftype, uint8_t csid, uint8_t vfe_intf)
+				    uint8_t intftype, uint8_t csid, enum msm_ispif_vfe_intf vfe_intf)
 {
 	uint32_t data;
 
@@ -314,7 +314,7 @@ static void msm_ispif_sel_csid_core(struct ispif_device *ispif,
 }
 
 static void msm_ispif_enable_crop(struct ispif_device *ispif,
-				  uint8_t intftype, uint8_t vfe_intf, uint16_t start_pixel,
+				  uint8_t intftype, enum msm_ispif_vfe_intf vfe_intf, uint16_t start_pixel,
 				  uint16_t end_pixel)
 {
 	uint32_t data;
@@ -347,7 +347,7 @@ static void msm_ispif_enable_crop(struct ispif_device *ispif,
 }
 
 static void msm_ispif_enable_intf_cids(struct ispif_device *ispif,
-				       uint8_t intftype, uint16_t cid_mask, uint8_t vfe_intf, uint8_t enable)
+				       uint8_t intftype, uint16_t cid_mask, enum msm_ispif_vfe_intf vfe_intf, uint8_t enable)
 {
 	uint32_t intf_addr, data;
 
@@ -391,7 +391,7 @@ static void msm_ispif_enable_intf_cids(struct ispif_device *ispif,
 }
 
 static int msm_ispif_validate_intf_status(struct ispif_device *ispif,
-					  uint8_t intftype, uint8_t vfe_intf)
+					  uint8_t intftype, enum msm_ispif_vfe_intf vfe_intf)
 {
 	int rc = 0;
 	uint32_t data = 0;
@@ -431,7 +431,7 @@ static int msm_ispif_validate_intf_status(struct ispif_device *ispif,
 }
 
 static void msm_ispif_select_clk_mux(struct ispif_device *ispif,
-				     uint8_t intftype, uint8_t csid, uint8_t vfe_intf)
+				     uint8_t intftype, uint8_t csid, enum msm_ispif_vfe_intf vfe_intf)
 {
 	uint32_t data = 0;
 
