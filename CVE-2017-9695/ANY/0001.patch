From b9732c9865d7ddf8eb5ba6d27db8081ad59c815a Mon Sep 17 00:00:00 2001
From: Vidyakumar Athota <vathota@codeaurora.org>
Date: Thu, 23 Mar 2017 13:35:22 -0700
Subject: soc: qcom: fix to avoid multiple memory allocations

There is a chance that glink channel memory can be allocated multiple
times if wdsp_glink_ch_info_init() is called from multiple threads.
Avoid this scenario by protecting the private data structure.

Change-Id: I04fc19232b0f128b36a00dc1e73a3bed03664a93
Signed-off-by: Vidyakumar Athota <vathota@codeaurora.org>
---
 drivers/soc/qcom/wcd-dsp-glink.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/drivers/soc/qcom/wcd-dsp-glink.c b/drivers/soc/qcom/wcd-dsp-glink.c
index 1ceded4..f601e66 100644
--- a/drivers/soc/qcom/wcd-dsp-glink.c
+++ b/drivers/soc/qcom/wcd-dsp-glink.c
@@ -531,6 +531,13 @@ static int wdsp_glink_ch_info_init(struct wdsp_glink_priv *wpriv,
 	u8 *payload;
 	u32 ch_size, ch_cfg_size;
 
+	mutex_lock(&wpriv->glink_mutex);
+	if (wpriv->ch) {
+		dev_err(wpriv->dev, "%s: glink ch memory is already allocated\n",
+			 __func__);
+		ret = -EINVAL;
+		goto done;
+	}
 	payload = (u8 *)pkt->payload;
 	no_of_channels = pkt->no_of_channels;
 
@@ -611,6 +618,7 @@ err_ch_mem:
 	wpriv->no_of_channels = 0;
 
 done:
+	mutex_unlock(&wpriv->glink_mutex);
 	return ret;
 }
 
-- 
cgit v1.1

