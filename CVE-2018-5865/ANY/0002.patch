diff --git a/drivers/staging/qcacld-3.0/core/utils/fwlog/dbglog_host.c b/drivers/staging/qcacld-3.0/core/utils/fwlog/dbglog_host.c
index ebf75e7..46e12c5 100644
--- a/drivers/staging/qcacld-3.0/core/utils/fwlog/dbglog_host.c
+++ b/drivers/staging/qcacld-3.0/core/utils/fwlog/dbglog_host.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2013-2017 The Linux Foundation. All rights reserved.
+ * Copyright (c) 2013-2018 The Linux Foundation. All rights reserved.
  *
  * Previously licensed under the ISC license by Qualcomm Atheros, Inc.
  *
@@ -1480,7 +1480,7 @@
 	char parseArgsString[DBGLOG_PARSE_ARGS_STRING_LENGTH];
 	char *dbgidString;
 
-	while (count < length) {
+	while ((count + 1) < length) {
 
 		debugid = DBGLOG_GET_DBGID(buffer[count + 1]);
 		moduleid = DBGLOG_GET_MODULEID(buffer[count + 1]);
@@ -1493,6 +1493,9 @@
 			OS_MEMZERO(parseArgsString, sizeof(parseArgsString));
 			totalWriteLen = 0;
 
+			if (!numargs || (count + numargs + 2 > length))
+				goto skip_args_processing;
+
 			for (curArgs = 0; curArgs < numargs; curArgs++) {
 				/*
 				 * Using sprintf_s instead of sprintf,
@@ -1505,7 +1508,7 @@
 					     buffer[count + 2 + curArgs]);
 				totalWriteLen += writeLen;
 			}
-
+skip_args_processing:
 			if (debugid < MAX_DBG_MSGS) {
 				dbgidString = DBG_MSG_ARR[moduleid][debugid];
 				if (dbgidString != NULL) {
@@ -1977,6 +1980,11 @@
 		len = param_buf->num_bufp;
 	}
 
+	if (len < sizeof(dropped)) {
+		AR_DEBUG_PRINTF(ATH_DEBUG_ERR, ("Invalid length\n"));
+		return A_ERROR;
+	}
+
 	dropped = *((A_UINT32 *) datap);
 	if (dropped > 0) {
 		AR_DEBUG_PRINTF(ATH_DEBUG_TRC,
