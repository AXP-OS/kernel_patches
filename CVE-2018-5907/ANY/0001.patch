diff --git a/sound/soc/msm/qdsp6v2/msm-qti-pp-config.c b/sound/soc/msm/qdsp6v2/msm-qti-pp-config.c
index d4e7860..5258d39 100644
--- a/sound/soc/msm/qdsp6v2/msm-qti-pp-config.c
+++ b/sound/soc/msm/qdsp6v2/msm-qti-pp-config.c
@@ -1,4 +1,4 @@
-/* Copyright (c) 2012-2017, The Linux Foundation. All rights reserved.
+/* Copyright (c) 2012-2018, The Linux Foundation. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -25,6 +25,7 @@
 #include "msm-qti-pp-config.h"
 #include "msm-pcm-routing-v2.h"
 
+#define MAX_MIXER_CTL_BUF_SIZE 512
 /* EQUALIZER */
 /* Equal to Frontend after last of the MULTIMEDIA SESSIONS */
 #define MAX_EQ_SESSIONS		MSM_FRONTEND_DAI_CS_VOICE
@@ -877,7 +878,7 @@
 			struct snd_ctl_elem_info *uinfo)
 {
 	uinfo->type = SNDRV_CTL_ELEM_TYPE_BYTES;
-	uinfo->count = 512;
+	uinfo->count = MAX_MIXER_CTL_BUF_SIZE;
 
 	return 0;
 }
@@ -890,6 +891,12 @@
 	/* fetch payload size in first four bytes */
 	memcpy(&payload_size, ucontrol->value.bytes.data, sizeof(uint32_t));
 
+	if (payload_size > MAX_MIXER_CTL_BUF_SIZE - sizeof(payload_size)) {
+		pr_err("%s: payload_size=%d is over mixer ctl buffer limit.",
+			__func__, payload_size);
+		return -EINVAL;
+	}
+
 	if (kcontrol->private_data == NULL) {
 		/* buffer is empty */
 		kcontrol->private_data =
@@ -942,7 +949,7 @@
 			struct snd_ctl_elem_info *uinfo)
 {
 	uinfo->type = SNDRV_CTL_ELEM_TYPE_BYTES;
-	uinfo->count = 512;
+	uinfo->count = MAX_MIXER_CTL_BUF_SIZE;
 
 	return 0;
 }
