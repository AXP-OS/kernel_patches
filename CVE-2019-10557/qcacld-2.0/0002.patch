From ccd0bc796ffa9b8fd7cb38494b168195d10908e5 Mon Sep 17 00:00:00 2001
From: tinlin <tinlin@codeaurora.org>
Date: Tue, 16 Oct 2018 14:06:21 +0800
Subject: qcacld-2.0: Fix out-of-bounds access in limProcessAssocReqFrame

Propagation from cld3.0 to cld2.0.

Currently the function limProcessAssocReqFrame uses framelen
without validation to parse the IE buffer which could lead to
out-of-bounds memory access if the framelen is less than or
equal to LIM_ASSOC_REQ_IE_OFFSET(4).

Add check to validate the frame_len with LIM_ASSOC_REQ_IE_OFFSET
before sending frame_len - LIM_ASSOC_REQ_IE_OFFSET  to
cfg_get_vendor_ie_ptr_from_oui to parse the only IE buffer.

Change-Id: Iaa9e8db4a2605169c9ad3904878a2e626eb6de8b
CRs-Fixed: 2333905
---
 CORE/MAC/src/pe/lim/limProcessAssocReqFrame.c | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/CORE/MAC/src/pe/lim/limProcessAssocReqFrame.c b/CORE/MAC/src/pe/lim/limProcessAssocReqFrame.c
index ab1a5ce..6937cc8 100644
--- a/CORE/MAC/src/pe/lim/limProcessAssocReqFrame.c
+++ b/CORE/MAC/src/pe/lim/limProcessAssocReqFrame.c
@@ -382,6 +382,11 @@ limProcessAssocReqFrame(tpAniSirGlobal pMac, tANI_U8 *pRxPacketInfo,
     if ((psessionEntry->access_policy_vendor_ie) &&
             (psessionEntry->access_policy ==
              LIM_ACCESS_POLICY_RESPOND_IF_IE_IS_PRESENT)) {
+        if (framelen <= LIM_ASSOC_REQ_IE_OFFSET) {
+            limLog(pMac, LOGE, FL("Receive action frame of invalid len %d"),
+                   framelen);
+            return;
+        }
         if (!cfg_get_vendor_ie_ptr_from_oui(pMac,
                     &psessionEntry->access_policy_vendor_ie[2],
                     3, pBody + LIM_ASSOC_REQ_IE_OFFSET,
-- 
cgit v1.1

