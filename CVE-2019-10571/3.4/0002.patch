From b5354592c934cfd354ae05423a22392d69a83206 Mon Sep 17 00:00:00 2001
From: Rajesh Kemisetti <rajeshk@codeaurora.org>
Date: Wed, 19 Jun 2019 20:53:52 +0530
Subject: [PATCH] msm: kgsl: Add missing check for snapshot IB dump

During ringbuffer parsing, same IB can exist multiple times
but size validation happens only for the first time.
This leads to out of bound access if the subsequent sizes are
greater than the allocated size.

Add a check to make sure that requested size is within the
allocated range.

Backported to the FP2 kernel version 3.4.

Issue: SEC-2073
Bug: 138940226
Change-Id: Ie5d3c02c1669de2e6188821399e985f0991aa57c
Signed-off-by: Rajesh Kemisetti <rajeshk@codeaurora.org>
Signed-off-by: Harshitha Sai Neelati <hsaine@codeaurora.org>
(cherry picked from commit 63b1244daf4a9b965d4636ce2e67ff4555fff6c0)
---
 drivers/gpu/msm/adreno_snapshot.c | 16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/msm/adreno_snapshot.c b/drivers/gpu/msm/adreno_snapshot.c
index a11c63d9a3d..5aa6d0826a6 100644
--- a/drivers/gpu/msm/adreno_snapshot.c
+++ b/drivers/gpu/msm/adreno_snapshot.c
@@ -1,4 +1,4 @@
-/* Copyright (c) 2012-2014, The Linux Foundation. All rights reserved.
+/* Copyright (c) 2012-2014,2019 The Linux Foundation. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -62,6 +62,20 @@ static void push_object(struct kgsl_device *device, int type,
 	for (index = 0; index < objbufptr; index++) {
 		if (objbuf[index].gpuaddr == gpuaddr &&
 			objbuf[index].ptbase == ptbase) {
+				/*
+				 * Check if newly requested size is within the
+				 * allocated range or not, otherwise continue
+				 * with previous size.
+				 */
+				if (!kgsl_gpuaddr_in_memdesc(
+					&objbuf[index].entry->memdesc,
+					gpuaddr, dwords << 2)) {
+					KGSL_CORE_ERR(
+						"snapshot: IB 0x%016x size is not within the memdesc range\n",
+						gpuaddr);
+					return;
+				}
+
 				objbuf[index].dwords = dwords;
 				return;
 			}
