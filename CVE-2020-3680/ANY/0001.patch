From dc2091e9e4af87e8edaa328ec3a7192198b75669 Mon Sep 17 00:00:00 2001
From: Mohammed Nayeem Ur Rahman <mohara@codeaurora.org>
Date: Tue, 7 Jan 2020 17:07:55 +0530
Subject: msm: adsprpc: Variable map may UAF due to race conditions

Variable map may pointing to the same buffer on race conditions
in functions fastrpc_internal_mmap, fastrpc_internal_munmap and,
fastrpc_internal_munmap_fd. Use mutex to avoid race conditions
on same buffer.

Change-Id: Ic51bce81a92b68516c9bdcf4f9955a06392d75e8
Acked-by: Krishnaiah Tadakamalla <ktadakam@qti.qualcomm.com>
Signed-off-by: Signed-off-by: Mohammed Nayeem Ur Rahman <mohara@codeaurora.org>
---
 drivers/char/adsprpc.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/drivers/char/adsprpc.c b/drivers/char/adsprpc.c
index 5907254..edbe70f 100644
--- a/drivers/char/adsprpc.c
+++ b/drivers/char/adsprpc.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2012-2019, The Linux Foundation. All rights reserved.
+ * Copyright (c) 2012-2020, The Linux Foundation. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -2721,6 +2721,7 @@ static int fastrpc_internal_munmap_fd(struct fastrpc_file *fl,
 	VERIFY(err, (fl && ud));
 	if (err)
 		goto bail;
+	mutex_lock(&fl->map_mutex);
 	mutex_lock(&fl->fl_map_mutex);
 	if (fastrpc_mmap_find(fl, ud->fd, ud->va, ud->len, 0, 0, &map)) {
 		pr_err("adsprpc: mapping not found to unmap %d va %llx %x\n",
@@ -2728,11 +2729,13 @@ static int fastrpc_internal_munmap_fd(struct fastrpc_file *fl,
 			(unsigned int)ud->len);
 		err = -1;
 		mutex_unlock(&fl->fl_map_mutex);
+		mutex_unlock(&fl->map_mutex);
 		goto bail;
 	}
 	if (map)
 		fastrpc_mmap_free(map, 0);
 	mutex_unlock(&fl->fl_map_mutex);
+	mutex_unlock(&fl->map_mutex);
 bail:
 	return err;
 }
-- 
cgit v1.1

