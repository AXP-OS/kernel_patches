From 70c13b73f1ea7a30a730ced48a59d366898677bc Mon Sep 17 00:00:00 2001
From: Puranam V G Tejaswi <pvgtejas@codeaurora.org>
Date: Tue, 12 Jan 2021 16:21:17 +0530
Subject: msm: kgsl: Change vma->vm_file to shmem file

If shmem is enabled, change vma->vm_file to shmem file. During mmap, the
vma is added to the vma chains contained in the adderss_space struct of
the file. This can later be used when trying to remove all mappings of
a page.

Change-Id: Ifa373c3300c4676fd2ba3d330d306060e4c321dc
Signed-off-by: Puranam V G Tejaswi <pvgtejas@codeaurora.org>
---
 drivers/gpu/msm/kgsl.c | 13 +++++++------
 drivers/gpu/msm/kgsl.h |  6 +-----
 2 files changed, 8 insertions(+), 11 deletions(-)

diff --git a/drivers/gpu/msm/kgsl.c b/drivers/gpu/msm/kgsl.c
index d7277bf..76f54bb 100644
--- a/drivers/gpu/msm/kgsl.c
+++ b/drivers/gpu/msm/kgsl.c
@@ -81,7 +81,7 @@ static inline struct kgsl_pagetable *_get_memdesc_pagetable(
 
 static void kgsl_mem_entry_detach_process(struct kgsl_mem_entry *entry);
 
-static const struct file_operations kgsl_fops;
+static const struct vm_operations_struct kgsl_gpumem_vm_ops;
 
 /*
  * The memfree list contains the last N blocks of memory that have been freed.
@@ -2437,7 +2437,7 @@ static int check_vma(unsigned long hostptr, u64 size)
 			return false;
 
 		/* Don't remap memory that we already own */
-		if (vma->vm_file && vma->vm_file->f_op == &kgsl_fops)
+		if (vma->vm_file && vma->vm_ops == &kgsl_gpumem_vm_ops)
 			return false;
 
 		cur = vma->vm_end;
@@ -2594,7 +2594,7 @@ static int kgsl_setup_dmabuf_useraddr(struct kgsl_device *device,
 		 * Check to see that this isn't our own memory that we have
 		 * already mapped
 		 */
-		if (vma->vm_file->f_op == &kgsl_fops) {
+		if (vma->vm_ops == &kgsl_gpumem_vm_ops) {
 			up_read(&current->mm->mmap_sem);
 			return -EFAULT;
 		}
@@ -4973,9 +4973,10 @@ static int kgsl_mmap(struct file *file, struct vm_area_struct *vma)
 		}
 	}
 
-	vma->vm_file = file;
-
-	entry->memdesc.vma = vma;
+	if (entry->memdesc.shmem_filp) {
+		fput(vma->vm_file);
+		vma->vm_file = get_file(entry->memdesc.shmem_filp);
+	}
 
 	/*
 	 * kgsl gets the entry id or the gpu address through vm_pgoff.
diff --git a/drivers/gpu/msm/kgsl.h b/drivers/gpu/msm/kgsl.h
index 157dd3b..03183cc 100644
--- a/drivers/gpu/msm/kgsl.h
+++ b/drivers/gpu/msm/kgsl.h
@@ -1,6 +1,6 @@
 /* SPDX-License-Identifier: GPL-2.0-only */
 /*
- * Copyright (c) 2008-2020, The Linux Foundation. All rights reserved.
+ * Copyright (c) 2008-2021, The Linux Foundation. All rights reserved.
  */
 #ifndef __KGSL_H
 #define __KGSL_H
@@ -228,10 +228,6 @@ struct kgsl_memdesc {
 	unsigned int cur_bindings;
 	struct file *shmem_filp;
 	/**
-	 * @vma: Pointer to the vm_area_struct this memdesc is mapped to
-	 */
-	struct vm_area_struct *vma;
-	/**
 	 * @lock: Spinlock to protect the pages array
 	 */
 	spinlock_t lock;
-- 
cgit v1.1

