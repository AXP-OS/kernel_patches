From 9ca200b6d0df44ba423a908dbda97cbf4c7bb10a Mon Sep 17 00:00:00 2001
From: Kamal Agrawal <kamaagra@codeaurora.org>
Date: Sat, 21 Aug 2021 08:50:33 +0530
Subject: msm: kgsl: Fix slab-out-of-bounds read in kgsl_paged_vmfault

Global memory descriptor like memstore is not associated with
any process. Hence, process private is not available for global
memdesc. Reduce the scope of local process private variable.

Change-Id: I749d1fabfc0f30ae09b0532d82cad107a98be609
Signed-off-by: Kamal Agrawal <kamaagra@codeaurora.org>
---
 drivers/gpu/msm/kgsl_sharedmem.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/msm/kgsl_sharedmem.c b/drivers/gpu/msm/kgsl_sharedmem.c
index 80c6a15..42311fd 100644
--- a/drivers/gpu/msm/kgsl_sharedmem.c
+++ b/drivers/gpu/msm/kgsl_sharedmem.c
@@ -345,8 +345,6 @@ static vm_fault_t kgsl_paged_vmfault(struct kgsl_memdesc *memdesc,
 	int pgoff, ret;
 	struct page *page;
 	unsigned int offset = vmf->address - vma->vm_start;
-	struct kgsl_process_private *priv =
-		((struct kgsl_mem_entry *)vma->vm_private_data)->priv;
 
 	if (offset >= memdesc->size)
 		return VM_FAULT_SIGBUS;
@@ -358,6 +356,9 @@ static vm_fault_t kgsl_paged_vmfault(struct kgsl_memdesc *memdesc,
 		page = memdesc->pages[pgoff];
 		get_page(page);
 	} else {
+		struct kgsl_process_private *priv =
+			((struct kgsl_mem_entry *)vma->vm_private_data)->priv;
+
 		/* We are here because page was reclaimed */
 		memdesc->priv |= KGSL_MEMDESC_SKIP_RECLAIM;
 		spin_unlock(&memdesc->lock);
-- 
cgit v1.1

