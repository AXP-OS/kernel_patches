From b48cdc1354929396bdc24194f94349d41e685f76 Mon Sep 17 00:00:00 2001
From: Ning Cai <ncai@codeaurora.org>
Date: Fri, 27 Aug 2021 09:43:30 -0700
Subject: net: emac: Add check to avoid invalid queue access

When program avb/dcb algorithm from ioctl request,
DWC_ETH_QOS driver does not block invalid queue number from userspace.
Add checking and block the invalid qinx input to fix the issue.

Change-Id: I7b87b1f7bc4911f8d32625bd2a0f93d568e3d73f
Signed-off-by: Ning Cai <ncai@codeaurora.org>
---
 .../qualcomm/emac_dwc_eqos/DWC_ETH_QOS_drv.c       | 25 ++++++++++++++++++----
 1 file changed, 21 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/qualcomm/emac_dwc_eqos/DWC_ETH_QOS_drv.c b/drivers/net/ethernet/qualcomm/emac_dwc_eqos/DWC_ETH_QOS_drv.c
index 3bfcf46..80fd7bb 100644
--- a/drivers/net/ethernet/qualcomm/emac_dwc_eqos/DWC_ETH_QOS_drv.c
+++ b/drivers/net/ethernet/qualcomm/emac_dwc_eqos/DWC_ETH_QOS_drv.c
@@ -1,4 +1,4 @@
-/* Copyright (c) 2017-2019, The Linux Foundation. All rights reserved.
+/* Copyright (c) 2017-2019,2021 The Linux Foundation. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -6872,8 +6872,18 @@ static void DWC_ETH_QOS_program_dcb_algorithm(
 	DBGPR("-->DWC_ETH_QOS_program_dcb_algorithm\n");
 
 	if (copy_from_user(&l_dcb_struct, u_dcb_struct,
-			   sizeof(struct DWC_ETH_QOS_dcb_algorithm)))
-		dev_alert(&pdata->pdev->dev, "Failed to fetch DCB Struct info from user\n");
+			   sizeof(struct DWC_ETH_QOS_dcb_algorithm))) {
+		dev_alert(&pdata->pdev->dev,
+			  "Failed to fetch DCB Struct info from user\n");
+		return;
+	}
+
+	if (l_dcb_struct.qinx >= DWC_ETH_QOS_TX_QUEUE_CNT) {
+		dev_alert(&pdata->pdev->dev,
+			  "Invaild queue number[%u] in DCB Struct from user\n",
+			  l_dcb_struct.qinx);
+		return;
+	}
 
 	hw_if->set_tx_queue_operating_mode(l_dcb_struct.qinx,
 		(UINT)l_dcb_struct.op_mode);
@@ -6943,8 +6953,10 @@ static void DWC_ETH_QOS_program_avb_algorithm(
 	DBGPR("-->DWC_ETH_QOS_program_avb_algorithm\n");
 
 	if (copy_from_user(&l_avb_struct, u_avb_struct,
-			   sizeof(struct DWC_ETH_QOS_avb_algorithm)))
+			   sizeof(struct DWC_ETH_QOS_avb_algorithm))) {
 		dev_alert(&pdata->pdev->dev, "Failed to fetch AVB Struct info from user\n");
+		return;
+	}
 
 
 	/*Application uses 1 for CLASS A traffic and 2 for CLASS B traffic
@@ -6959,6 +6971,11 @@ static void DWC_ETH_QOS_program_avb_algorithm(
 		pdata->l_avb_struct_class_b = l_avb_struct;
 		pdata->is_class_b_avb_algo_stored = 1;
 		EMACINFO("DWC_ETH_QOS_program_avb_algorithm class b stored \n");
+	} else {
+		dev_alert(&pdata->pdev->dev,
+			  "Invalid queue number[%u] in AVB struct from user\n",
+			  l_avb_struct.qinx);
+		return;
 	}
 
 	DWC_ETH_QOS_program_avb_algorithm_hw_register(pdata, l_avb_struct);
-- 
cgit v1.1

