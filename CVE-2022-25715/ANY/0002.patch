From 9f51544c8eef7e1711cc577feeae80724bd42b78 Mon Sep 17 00:00:00 2001
From: Raghavendra Ambadas <quic_c_rambad@quicinc.com>
Date: Tue, 29 Mar 2022 11:38:37 +0530
Subject: [PATCH] fbdev: msm: check for valid fence before using objects

Validate the input fence for mdss and sde rotator before
referencing the structure objects.
and also log the fence driver name waiting for the fence.
Earlier the fence name was null irrespective of the
driver.

Change-Id: Ie277d861057a41092505c73ef3815f7d769d114e
Signed-off-by: Raghavendra Ambadas <quic_c_rambad@quicinc.com>
---
 .../msm/sde/rotator/sde_rotator_sync.c        |  6 ++++++
 drivers/video/fbdev/msm/mdss_sync.c           | 20 ++++++++++++++++++-
 2 files changed, 25 insertions(+), 1 deletion(-)

diff --git a/drivers/media/platform/msm/sde/rotator/sde_rotator_sync.c b/drivers/media/platform/msm/sde/rotator/sde_rotator_sync.c
index 70e340f0c68ba..e0df62e27ca28 100644
--- a/drivers/media/platform/msm/sde/rotator/sde_rotator_sync.c
+++ b/drivers/media/platform/msm/sde/rotator/sde_rotator_sync.c
@@ -1,4 +1,5 @@
 /* Copyright (c) 2015-2017, The Linux Foundation. All rights reserved.
+ * Copyright (c) 2022 Qualcomm Innovation Center, Inc. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -151,6 +152,11 @@ static void sde_rot_fence_release(struct dma_fence *fence)
 	struct sde_rot_fence *f = to_sde_rot_fence(fence);
 	unsigned long flags;
 
+	if (fence->ops->get_driver_name != &sde_rot_fence_get_driver_name) {
+		pr_debug("invalid parameters\n");
+		return;
+	}
+
 	spin_lock_irqsave(fence->lock, flags);
 	if (!list_empty(&f->fence_list))
 		list_del(&f->fence_list);
diff --git a/drivers/video/fbdev/msm/mdss_sync.c b/drivers/video/fbdev/msm/mdss_sync.c
index 04f7dd330cca5..f204349ae0a30 100644
--- a/drivers/video/fbdev/msm/mdss_sync.c
+++ b/drivers/video/fbdev/msm/mdss_sync.c
@@ -1,4 +1,5 @@
 /* Copyright (c) 2015-2018, The Linux Foundation. All rights reserved.
+ * Copyright (c) 2022 Qualcomm Innovation Center, Inc. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -131,6 +132,13 @@ static void mdss_fence_release(struct dma_fence *fence)
 	struct mdss_timeline *tl = to_mdss_timeline(fence);
 
 	pr_debug("%s for fence %s\n", __func__, f->name);
+
+	if (!fence || (fence->ops->get_driver_name !=
+			&mdss_fence_get_driver_name)) {
+		pr_debug("invalid parameters\n");
+		return;
+	}
+
 	spin_lock(&tl->list_lock);
 	if (!list_empty(&f->fence_list))
 		list_del(&f->fence_list);
@@ -422,7 +430,10 @@ int mdss_wait_sync_fence(struct mdss_fence *fence,
  */
 struct mdss_fence *mdss_get_fd_sync_fence(int fd)
 {
-	return (struct mdss_fence *) sync_file_get_fence(fd);
+	struct dma_fence *fence = NULL;
+
+	fence = sync_file_get_fence(fd);
+	return to_mdss_fence(fence);
 }
 
 /*
@@ -465,11 +476,18 @@ int mdss_get_sync_fence_fd(struct mdss_fence *fence)
  */
 const char *mdss_get_sync_fence_name(struct mdss_fence *fence)
 {
+	struct dma_fence *input_fence = NULL;
+
 	if (!fence) {
 		pr_err("invalid parameters\n");
 		return NULL;
 	}
 
+	input_fence = (struct dma_fence *) &fence->base;
+
+	if (input_fence->ops->get_driver_name != &mdss_fence_get_driver_name)
+		return input_fence->ops->get_driver_name(input_fence);
+
 	return fence->name;
 }
 #endif
-- 
GitLab

