From 60e099974d1e6b3f20a44c8da1c55c1cdbee1733 Mon Sep 17 00:00:00 2001
From: Tao Zhang <quic_taozhan@quicinc.com>
Date: Fri, 20 May 2022 21:01:23 +0800
Subject: [PATCH] net: vmw_vsock: gunyah: Add bounds check

Validate the incoming packet size when trying to process the message
received on the transport.

Change-Id: If7ea95180a2b04be4832e771013b9e4342118b4c
Signed-off-by: Tao Zhang <quic_taozhan@quicinc.com>
---
 net/vmw_vsock/gunyah_transport.c | 18 +++++++++++++++---
 1 file changed, 15 insertions(+), 3 deletions(-)

diff --git a/net/vmw_vsock/gunyah_transport.c b/net/vmw_vsock/gunyah_transport.c
index 834ac53d86ec..a21bb056c5bd 100644
--- a/net/vmw_vsock/gunyah_transport.c
+++ b/net/vmw_vsock/gunyah_transport.c
@@ -403,17 +403,29 @@ static void ghvst_process_msg(struct gh_transport_device *gdev,
 		    hdr.type != GHVST_TYPE_DATA) {
 			pr_err("%s: Incorrect info ver:%d; type:%d\n",
 			       __func__, hdr.version, hdr.type);
-			reset_buf(gbuf);
-			mutex_unlock(&gbuf->lock);
-			return;
+			goto out;
+		}
+		/* Checked the data size in pkg header */
+		if (hdr.size > MAX_PKT_SZ - sizeof(hdr)) {
+			pr_err("%s: Incorrect received header size:%d\n",
+			       __func__, hdr.size);
+			goto out;
 		}
 		gbuf->len = sizeof(hdr) + hdr.size;
 		gbuf->hdr_received = true;
+		/* Check gbuf->len size, can not be smaller than gbuf->copied*/
+		if (gbuf->len < gbuf->copied) {
+			pr_err("%s: Incorrect guf size: len=%d, copied=%d\n",
+			       __func__, gbuf->len, gbuf->copied);
+			goto out;
+		}
 		gbuf->remaining = gbuf->len - gbuf->copied;
 		check_rx_complete(gdev);
 		mutex_unlock(&gbuf->lock);
 		return;
 	}
+out:
+	reset_buf(gbuf);
 	mutex_unlock(&gbuf->lock);
 }
 
-- 
GitLab

