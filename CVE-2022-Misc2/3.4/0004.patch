From bd1f0b10559c0e89432c30f863d9834549800c6b Mon Sep 17 00:00:00 2001
From: Karsten Tausche <karsten@fairphone.com>
Date: Thu, 14 May 2020 14:40:17 +0200
Subject: [PATCH] ASoC: pcm: Workaround oops caused by incomplete substream

In soc_pcm_open, substream->private_data can end up being NULL, which
leads to a kernel panic. Probably, this should be caught further up in
the call stack already, but this patch avoids at least the kernel panic.

Issue: SEC-2436
Change-Id: Ifd77abd2e8215a85af9efd8cfea2fd2d1c89dee0
---
 sound/soc/soc-pcm.c | 22 +++++++++++++++++-----
 1 file changed, 17 insertions(+), 5 deletions(-)

diff --git a/sound/soc/soc-pcm.c b/sound/soc/soc-pcm.c
index 9f1291497b0..65e007ce2ed 100644
--- a/sound/soc/soc-pcm.c
+++ b/sound/soc/soc-pcm.c
@@ -199,13 +199,25 @@ static int soc_pcm_open(struct snd_pcm_substream *substream)
 {
 	struct snd_soc_pcm_runtime *rtd = substream->private_data;
 	struct snd_pcm_runtime *runtime = substream->runtime;
-	struct snd_soc_platform *platform = rtd->platform;
-	struct snd_soc_dai *cpu_dai = rtd->cpu_dai;
-	struct snd_soc_dai *codec_dai = rtd->codec_dai;
-	struct snd_soc_dai_driver *cpu_dai_drv = cpu_dai->driver;
-	struct snd_soc_dai_driver *codec_dai_drv = codec_dai->driver;
+	struct snd_soc_platform *platform = NULL;
+	struct snd_soc_dai *cpu_dai = NULL;
+	struct snd_soc_dai *codec_dai = NULL;
+	struct snd_soc_dai_driver *cpu_dai_drv = NULL;
+	struct snd_soc_dai_driver *codec_dai_drv = NULL;
 	int ret = 0;
 
+	if (!rtd) {
+		printk(KERN_ERR "asoc: incomplete substream %i \"%s\": private_data "
+			"is NULL\n", substream->number, substream->name);
+		return -EINVAL;
+	}
+
+	platform = rtd->platform;
+	cpu_dai = rtd->cpu_dai;
+	codec_dai = rtd->codec_dai;
+	cpu_dai_drv = cpu_dai->driver;
+	codec_dai_drv = codec_dai->driver;
+
 	pm_runtime_get_sync(cpu_dai->dev);
 	pm_runtime_get_sync(codec_dai->dev);
 	pm_runtime_get_sync(platform->dev);
