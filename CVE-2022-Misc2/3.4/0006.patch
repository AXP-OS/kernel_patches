From 222c3629ee16e501f914e0a6d25f18a732a3c406 Mon Sep 17 00:00:00 2001
From: Karsten Tausche <karsten@fairphone.com>
Date: Fri, 15 May 2020 18:18:09 +0200
Subject: [PATCH] msm: kgsl: Don't release context twice in
 kgsl_add_fence_event

In cases where copy_to_user() in kgsl_add_fence_event fails,
kgsl_context_put() gets called twice on the same context. After the
first call to kgsl_context_put(), just put the context to NULL. It's not
used anymore, and the second release will end up being a no-op.

CTS: This doesn't seem to be directly related to the tested CVE, but the
PoC causes a kernel panic, which gets fixed with this commit. Patches
for the CVE are already in the history.

Issue: SEC-2433
Test: run cts -m CtsSecurityBulletinHostTestCases
  -t android.security.cts.Poc17_01#testPocCVE_2016_8434
Change-Id: Iad77d0c582f28c9a2dea074672eced883560287d
---
 drivers/gpu/msm/kgsl_sync.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/drivers/gpu/msm/kgsl_sync.c b/drivers/gpu/msm/kgsl_sync.c
index d10429d38dd..5ae245c7e7b 100644
--- a/drivers/gpu/msm/kgsl_sync.c
+++ b/drivers/gpu/msm/kgsl_sync.c
@@ -212,6 +212,8 @@ int kgsl_add_fence_event(struct kgsl_device *device,
 	}
 
 	kgsl_context_put(context);
+	/* We released the context, so we must not use it again. */
+	context = NULL;
 
 	/* Unlock the mutex before copying to user */
 	kgsl_mutex_unlock(&device->mutex, &device->mutex_owner);
