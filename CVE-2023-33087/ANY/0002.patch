From 2843421e63c59ba22e4e323ce04b272c855bd3d6 Mon Sep 17 00:00:00 2001
From: Kaushal Hooda <quic_khooda@quicinc.com>
Date: Thu, 13 Jul 2023 20:55:07 +0530
Subject: [PATCH] rpmsg: slatecom: Discard unaligned packet to read

If intent_alloc_size and chunk size are unaligned with the minimum offset,
then ahb_read can lead to bytes overflow as ahb_read is performed
with word_size aligned.

If the received chunk_size is not aligned to word_size, discard packet
to read.

Change-Id: I36fabc8bde22355de1ae32cb026a2a246778d47e
Signed-off-by: Kaushal Hooda <quic_khooda@quicinc.com>
---
 drivers/rpmsg/qcom_glink_helioscom.c | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/drivers/rpmsg/qcom_glink_helioscom.c b/drivers/rpmsg/qcom_glink_helioscom.c
index c434b68a57644..ee55b51ef9e18 100644
--- a/drivers/rpmsg/qcom_glink_helioscom.c
+++ b/drivers/rpmsg/qcom_glink_helioscom.c
@@ -1800,12 +1800,21 @@ static int glink_helioscom_rx_data(struct glink_helioscom *glink,
 
 	if (intent->size - intent->offset < chunk_size) {
 		dev_err(glink->dev, "Insufficient space in intent\n");
+		glink_helioscom_free_intent(channel, intent);
 		mutex_unlock(&channel->intent_lock);
 
 		/* The packet header lied, drop payload */
 		return msglen;
 	}
 
+	if (chunk_size % WORD_SIZE) {
+		dev_err(glink->dev, "For chunk_size %d use short packet\n",
+						chunk_size);
+		glink_helioscom_free_intent(channel, intent);
+		mutex_unlock(&channel->intent_lock);
+		return msglen;
+	}
+
 	do {
 		rc = helioscom_ahb_read(glink->helioscom_handle, (uint32_t)(size_t)addr,
 				ALIGN(chunk_size, WORD_SIZE)/WORD_SIZE,
-- 
GitLab

