From 232be7529ed05c2d0a148bcb643fe74d21702cb8 Mon Sep 17 00:00:00 2001
From: Jilai Wang <quic_jilaiw@quicinc.com>
Date: Thu, 22 Jun 2023 11:41:21 -0400
Subject: [PATCH] BACKPORT: msm: npu: Fix use after free issue

There is possibility that network will be used after free.
This change is to fix this issue.

Change-Id: I25eaf33f2a641127f13ec20df5da29d2b2923828
Signed-off-by: Jilai Wang <quic_jilaiw@quicinc.com>
---
 drivers/media/platform/msm/npu/npu_mgr.c | 15 +++++++++++++++
 drivers/media/platform/msm/npu/npu_mgr.h |  1 +
 2 files changed, 16 insertions(+)

diff --git a/drivers/media/platform/msm/npu/npu_mgr.c b/drivers/media/platform/msm/npu/npu_mgr.c
index 9f8fa45d8a0d..bfb30998e780 100644
--- a/drivers/media/platform/msm/npu/npu_mgr.c
+++ b/drivers/media/platform/msm/npu/npu_mgr.c
@@ -1620,6 +1620,13 @@ int32_t npu_host_unload_network(struct npu_client *client,
 		return -EINVAL;
 	}
 
+	if (network->is_unloading) {
+		pr_err("network is unloading\n");
+		network_put(network);
+		mutex_unlock(&host_ctx->lock);
+		return -EINVAL;
+	}
+
 	if (!network->is_active) {
 		pr_err("network is not active\n");
 		network_put(network);
@@ -1632,6 +1639,8 @@ int32_t npu_host_unload_network(struct npu_client *client,
 		goto free_network;
 	}
 
+	network->is_unloading = true;
+
 	pr_debug("Unload network %lld\n", network->id);
 	/* prepare IPC packet for UNLOAD */
 	unload_packet.header.cmd_type = NPU_IPC_CMD_UNLOAD;
@@ -1734,6 +1743,12 @@ int32_t npu_host_exec_network(struct npu_client *client,
 	if (atomic_inc_return(&host_ctx->network_execute_cnt) == 1)
 		npu_notify_cdsprm_cxlimit_activity(npu_dev, true);
 
+	if (network->is_unloading) {
+		pr_err("network is unloading\n");
+		ret = -EINVAL;
+		goto exec_done;
+	}
+
 	if (!network->is_active) {
 		pr_err("network is not active\n");
 		ret = -EINVAL;
diff --git a/drivers/media/platform/msm/npu/npu_mgr.h b/drivers/media/platform/msm/npu/npu_mgr.h
index f42e1b76c50b..44b04d3e7714 100644
--- a/drivers/media/platform/msm/npu/npu_mgr.h
+++ b/drivers/media/platform/msm/npu/npu_mgr.h
@@ -59,6 +59,7 @@ struct npu_network {
 	atomic_t ref_cnt;
 	bool is_valid;
 	bool is_active;
+	bool is_unloading;
 	bool fw_error;
 	bool cmd_pending;
 	bool cmd_async;
