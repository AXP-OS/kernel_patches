From 9b2dc03af9003b96d23fc1a8f458c4873fc0c5a3 Mon Sep 17 00:00:00 2001
From: Hui Li <quic_hul@quicinc.com>
Date: Thu, 31 Aug 2023 11:30:41 +0800
Subject: [PATCH] soc: qcom: hgsl: fix potential UAF

potential UAF due to race condition in hgsl_ioctl_ctxt_create
and hgsl_ioctl_ctxt_destroy, assign ctxt to hgsl->contexts[]
after the context creation is fully complete.

Change-Id: I07ee64579fa4c9e494b1c5f21053baaa6a027ec2
Signed-off-by: Hui Li <quic_hul@quicinc.com>
---
 drivers/soc/qcom/hgsl/hgsl.c | 26 +++++++++++++-------------
 1 file changed, 13 insertions(+), 13 deletions(-)

diff --git a/drivers/soc/qcom/hgsl/hgsl.c b/drivers/soc/qcom/hgsl/hgsl.c
index 772283c64ccaf..0f3838fe6529f 100644
--- a/drivers/soc/qcom/hgsl/hgsl.c
+++ b/drivers/soc/qcom/hgsl/hgsl.c
@@ -1819,19 +1819,6 @@ static int hgsl_ioctl_ctxt_create(struct file *filep, unsigned long arg)
 	init_waitqueue_head(&ctxt->wait_q);
 	mutex_init(&ctxt->lock);
 
-	write_lock(&hgsl->ctxt_lock);
-	if (hgsl->contexts[ctxt->context_id] != NULL) {
-		LOGE("context id %d already created",
-			ctxt->context_id);
-		ret = -EBUSY;
-		write_unlock(&hgsl->ctxt_lock);
-		goto out;
-	}
-
-	hgsl->contexts[ctxt->context_id] = ctxt;
-	write_unlock(&hgsl->ctxt_lock);
-	ctxt_created = true;
-
 	hgsl_get_shadowts_mem(hab_channel, ctxt);
 	if (!dbq_off)
 		hgsl_ctxt_create_dbq(priv, hab_channel, ctxt, dbq_info, dbq_info_checked);
@@ -1847,6 +1834,19 @@ static int hgsl_ioctl_ctxt_create(struct file *filep, unsigned long arg)
 	else
 		params.sync_type = HGSL_SYNC_TYPE_ISYNC;
 
+	write_lock(&hgsl->ctxt_lock);
+	if (hgsl->contexts[ctxt->context_id] != NULL) {
+		LOGE("context id %d already created",
+			ctxt->context_id);
+		ret = -EBUSY;
+		write_unlock(&hgsl->ctxt_lock);
+		goto out;
+	}
+
+	hgsl->contexts[ctxt->context_id] = ctxt;
+	write_unlock(&hgsl->ctxt_lock);
+	ctxt_created = true;
+
 	if (copy_to_user(USRPTR(arg), &params, sizeof(params))) {
 		ret = -EFAULT;
 		goto out;
-- 
GitLab

