From 6b2e2a5ee09c1ac74c9b61726570941ee7e18dec Mon Sep 17 00:00:00 2001
From: Hui Li <quic_hul@quicinc.com>
Date: Sat, 16 Sep 2023 10:31:21 +0800
Subject: [PATCH] soc: qcom: hgsl: fix potential use after free

A malicous user can close the fd after dma_buf_fd, then there
will be a use after free issue due to later's get_dma_buf, fix
it by installing fd after get_dma_buf.

Change-Id: Iffca7c0eb1cc58a6a52a7100e55a639c75ff0a62
Signed-off-by: Hui Li <quic_hul@quicinc.com>
---
 drivers/soc/qcom/hgsl/hgsl.c        | 5 ++++-
 drivers/soc/qcom/hgsl/hgsl_memory.c | 5 ++++-
 2 files changed, 8 insertions(+), 2 deletions(-)

diff --git a/drivers/soc/qcom/hgsl/hgsl.c b/drivers/soc/qcom/hgsl/hgsl.c
index 75c78cda3aab3..3f4b8d9836c69 100644
--- a/drivers/soc/qcom/hgsl/hgsl.c
+++ b/drivers/soc/qcom/hgsl/hgsl.c
@@ -1,6 +1,7 @@
 // SPDX-License-Identifier: GPL-2.0-only
 /*
  * Copyright (c) 2019-2022, The Linux Foundation. All rights reserved.
+ * Copyright (c) 2023 Qualcomm Innovation Center, Inc. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -1212,13 +1213,15 @@ static int hgsl_ioctl_get_shadowts_mem(struct file *filep, unsigned long arg)
 
 	dma_buf = ctxt->shadow_ts_node.dma_buf;
 	if (dma_buf) {
+		/* increase reference count before install fd. */
+		get_dma_buf(dma_buf);
 		params.fd = dma_buf_fd(dma_buf, O_CLOEXEC);
 		if (params.fd < 0) {
 			LOGE("dma buf to fd failed\n");
 			ret = -ENOMEM;
+			dma_buf_put(dma_buf);
 			goto out;
 		}
-		get_dma_buf(dma_buf);
 	}
 
 	if (copy_to_user(USRPTR(arg), &params, sizeof(params))) {
diff --git a/drivers/soc/qcom/hgsl/hgsl_memory.c b/drivers/soc/qcom/hgsl/hgsl_memory.c
index 9e3a06987ff21..3d8aab8d2b6c4 100644
--- a/drivers/soc/qcom/hgsl/hgsl_memory.c
+++ b/drivers/soc/qcom/hgsl/hgsl_memory.c
@@ -1,6 +1,7 @@
 // SPDX-License-Identifier: GPL-2.0-only
 /*
  * Copyright (c) 2020-2021, The Linux Foundation. All rights reserved.
+ * Copyright (c) 2023 Qualcomm Innovation Center, Inc. All rights reserved.
  */
 
 #include "hgsl_memory.h"
@@ -533,12 +534,14 @@ static int hgsl_export_dma_buf_fd(struct hgsl_mem_node *mem_node)
 	}
 	mem_node->dma_buf = dma_buf;
 
+	/* increase reference count before install fd. */
+	get_dma_buf(dma_buf);
 	fd = dma_buf_fd(dma_buf, O_CLOEXEC);
 	if (fd < 0) {
 		LOGE("dma buf to fd failed");
+		dma_buf_put(dma_buf);
 		return -EINVAL;
 	}
-	get_dma_buf(dma_buf);
 	mem_node->fd = fd;
 
 	return 0;
-- 
GitLab

