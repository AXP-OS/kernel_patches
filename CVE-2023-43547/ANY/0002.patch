From 8b0c9674da2669e5e04e2a021b862ed3c92a8b06 Mon Sep 17 00:00:00 2001
From: Hui Li <quic_hul@quicinc.com>
Date: Thu, 31 Aug 2023 14:21:11 +0800
Subject: [PATCH] soc: qcom: hgsl: fix potential use after free

A malicous user can close the fd after dma_buf_fd, then there
will be a use after free issue due to later's get_dma_buf, fix
it by installing fd after get_dma_buf.

Change-Id: Iffca7c0eb1cc58a6a52a7100e55a639c75ff0a62
Signed-off-by: Hui Li <quic_hul@quicinc.com>
---
 drivers/soc/qcom/hgsl/hgsl.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/drivers/soc/qcom/hgsl/hgsl.c b/drivers/soc/qcom/hgsl/hgsl.c
index 772283c64ccaf..68d9801c666a3 100644
--- a/drivers/soc/qcom/hgsl/hgsl.c
+++ b/drivers/soc/qcom/hgsl/hgsl.c
@@ -1601,13 +1601,15 @@ static int hgsl_ioctl_get_shadowts_mem(struct file *filep, unsigned long arg)
 
 	dma_buf = ctxt->shadow_ts_node->dma_buf;
 	if (dma_buf) {
+		/* increase reference count before install fd. */
+		get_dma_buf(dma_buf);
 		params.fd = dma_buf_fd(dma_buf, O_CLOEXEC);
 		if (params.fd < 0) {
 			LOGE("dma buf to fd failed\n");
 			ret = -ENOMEM;
+			dma_buf_put(dma_buf);
 			goto out;
 		}
-		get_dma_buf(dma_buf);
 	}
 
 	if (copy_to_user(USRPTR(arg), &params, sizeof(params))) {
@@ -2103,14 +2105,16 @@ static int hgsl_ioctl_mem_alloc(struct file *filep, unsigned long arg)
 	if (ret)
 		goto out;
 
+	/* increase reference count before install fd. */
+	get_dma_buf(mem_node->dma_buf);
 	params.fd = dma_buf_fd(mem_node->dma_buf, O_CLOEXEC);
 
 	if (params.fd < 0) {
 		LOGE("dma_buf_fd failed, size 0x%x", mem_node->memdesc.size);
 		ret = -EINVAL;
+		dma_buf_put(mem_node->dma_buf);
 		goto out;
 	}
-	get_dma_buf(mem_node->dma_buf);
 
 	if (copy_to_user(USRPTR(arg), &params, sizeof(params))) {
 		ret = -EFAULT;
-- 
GitLab

