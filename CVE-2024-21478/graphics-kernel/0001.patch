From 977d6c3ecc96ca400429a249fde0d2c78db0c355 Mon Sep 17 00:00:00 2001
From: Harshdeep Dhatt <quic_hdhatt@quicinc.com>
Date: Fri, 1 Sep 2023 12:27:10 -0600
Subject: [PATCH] kgsl: hwsched: Don't cross dereference kgsl_mem_entry pointer

The passed in pointer in kgsl_count_hw_fences() can be a
kgsl_mem_entry pointer. This gets cross dereferenced to
a kgsl_drawobj_sync_event pointer and causes a NULL pointer
dereference. To avoid this cross dereference, decouple the two
paths and call kgsl_count_hw_fences() only in the appropriate
path.

Change-Id: I1088a0b67f1f82a20ddc94c94cbdd31a44b18da6
Signed-off-by: Harshdeep Dhatt <quic_hdhatt@quicinc.com>
---
 kgsl.c         |  3 +--
 kgsl_drawobj.c |  5 +++--
 kgsl_sync.c    | 14 ++++++--------
 kgsl_sync.h    | 13 ++++++++-----
 4 files changed, 18 insertions(+), 17 deletions(-)

diff --git a/kgsl.c b/kgsl.c
index f84f3e7a..34cbf79f 100644
--- a/kgsl.c
+++ b/kgsl.c
@@ -2760,8 +2760,7 @@ static long gpuobj_free_on_fence(struct kgsl_device_private *dev_priv,
 		return -EINVAL;
 	}
 
-	handle = kgsl_sync_fence_async_wait(event.fd,
-		gpuobj_free_fence_func, entry, NULL);
+	handle = kgsl_sync_fence_async_wait(event.fd, gpuobj_free_fence_func, entry);
 
 	if (IS_ERR(handle)) {
 		kgsl_mem_entry_unset_pend(entry);
diff --git a/kgsl_drawobj.c b/kgsl_drawobj.c
index f1fdc7b8..82233b30 100644
--- a/kgsl_drawobj.c
+++ b/kgsl_drawobj.c
@@ -639,8 +639,7 @@ static int drawobj_add_sync_fence(struct kgsl_device *device,
 
 	set_bit(event->id, &syncobj->pending);
 
-	event->handle = kgsl_sync_fence_async_wait(sync.fd,
-				drawobj_sync_fence_func, event, priv);
+	event->handle = kgsl_sync_fence_async_wait(sync.fd, drawobj_sync_fence_func, event);
 
 	event->priv = priv;
 
@@ -665,6 +664,8 @@ static int drawobj_add_sync_fence(struct kgsl_device *device,
 		return ret;
 	}
 
+	kgsl_get_fence_info(event);
+
 	for (i = 0; priv && i < priv->num_fences; i++) {
 		trace_syncpoint_fence(syncobj, priv->fences[i].name);
 		log_kgsl_syncpoint_fence_event(syncobj->base.context->id,
diff --git a/kgsl_sync.c b/kgsl_sync.c
index 46cc03ad..51ea2682 100644
--- a/kgsl_sync.c
+++ b/kgsl_sync.c
@@ -451,17 +451,17 @@ static void kgsl_count_hw_fences(struct kgsl_drawobj_sync_event *event, struct d
 	}
 }
 
-static void kgsl_get_fence_info(struct dma_fence *fence,
-	struct event_fence_info *info_ptr, void *priv)
+void kgsl_get_fence_info(struct kgsl_drawobj_sync_event *event)
 {
 	unsigned int num_fences;
-	struct dma_fence **fences;
+	struct dma_fence *fence, **fences;
 	struct dma_fence_array *array;
-	struct kgsl_drawobj_sync_event *event = priv;
+	struct event_fence_info *info_ptr = event->priv;
 	int i;
 
-	array = to_dma_fence_array(fence);
+	fence = event->handle->fence;
 
+	array = to_dma_fence_array(fence);
 	if (array != NULL) {
 		num_fences = array->num_fences;
 		fences = array->fences;
@@ -506,7 +506,7 @@ count:
 }
 
 struct kgsl_sync_fence_cb *kgsl_sync_fence_async_wait(int fd,
-	bool (*func)(void *priv), void *priv, struct event_fence_info *info_ptr)
+	bool (*func)(void *priv), void *priv)
 {
 	struct kgsl_sync_fence_cb *kcb;
 	struct dma_fence *fence;
@@ -527,8 +527,6 @@ struct kgsl_sync_fence_cb *kgsl_sync_fence_async_wait(int fd,
 	kcb->priv = priv;
 	kcb->func = func;
 
-	kgsl_get_fence_info(fence, info_ptr, priv);
-
 	/* if status then error or signaled */
 	status = dma_fence_add_callback(fence, &kcb->fence_cb,
 				kgsl_sync_fence_callback);
diff --git a/kgsl_sync.h b/kgsl_sync.h
index f2535fbf..5962318c 100644
--- a/kgsl_sync.h
+++ b/kgsl_sync.h
@@ -90,9 +90,9 @@ void kgsl_sync_timeline_detach(struct kgsl_sync_timeline *ktimeline);
 
 void kgsl_sync_timeline_put(struct kgsl_sync_timeline *ktimeline);
 
-struct kgsl_sync_fence_cb *kgsl_sync_fence_async_wait(int fd,
-					bool (*func)(void *priv), void *priv,
-					struct event_fence_info *info_ptr);
+struct kgsl_sync_fence_cb *kgsl_sync_fence_async_wait(int fd, bool (*func)(void *priv), void *priv);
+
+void kgsl_get_fence_info(struct kgsl_drawobj_sync_event *event);
 
 void kgsl_sync_fence_async_cancel(struct kgsl_sync_fence_cb *kcb);
 
@@ -138,9 +138,12 @@ static inline void kgsl_sync_timeline_put(struct kgsl_sync_timeline *ktimeline)
 }
 
 
+static inline void kgsl_get_fence_info(struct kgsl_drawobj_sync_event *event)
+{
+}
+
 static inline struct kgsl_sync_fence_cb *kgsl_sync_fence_async_wait(int fd,
-					bool (*func)(void *priv), void *priv,
-					struct event_fence_info *info_ptr)
+	bool (*func)(void *priv), void *priv);
 {
 	return NULL;
 }
-- 
GitLab

