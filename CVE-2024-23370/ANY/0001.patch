From 0c1164c07baf37e8fbc7b6c24962e505f2fc9f89 Mon Sep 17 00:00:00 2001
From: Deyan Wang <quic_deyawang@quicinc.com>
Date: Mon, 29 Jan 2024 13:31:03 +0530
Subject: [PATCH] soc: qcom: hab: fix UAF issue in hab_vchan_open

Thread1:                            Thread2:
write_lock(&ctx->ctx_lock);
list_add_tail(&vchan->node,
              &ctx->vchannels);
ctx->vcnt++;
write_unlock(&ctx->ctx_lock);
                                    hab_vchan_close();
*vcid = vchan->id;
------------------------------------------------------
vchan object will be freed by hab_vchan_close(), so
*vcid = vchan->id will cause Use-Afer-Free issue.

Change-Id: I8fb5e6a619914d5843564c3e36b0ba16f48953cf
Signed-off-by: Deyan Wang <quic_deyawang@quicinc.com>
---
 drivers/soc/qcom/hab/hab.c | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/drivers/soc/qcom/hab/hab.c b/drivers/soc/qcom/hab/hab.c
index 3cf6ebf052332..9c92ec69bee90 100644
--- a/drivers/soc/qcom/hab/hab.c
+++ b/drivers/soc/qcom/hab/hab.c
@@ -1,7 +1,7 @@
 // SPDX-License-Identifier: GPL-2.0-only
 /*
  * Copyright (c) 2016-2021, The Linux Foundation. All rights reserved.
- * Copyright (c) 2022-2023 Qualcomm Innovation Center, Inc. All rights reserved.
+ * Copyright (c) 2022-2024 Qualcomm Innovation Center, Inc. All rights reserved.
  */
 #include "hab.h"
 
@@ -828,9 +828,8 @@ int hab_vchan_open(struct uhab_context *ctx,
 	hab_write_lock(&ctx->ctx_lock, !ctx->kernel);
 	list_add_tail(&vchan->node, &ctx->vchannels);
 	ctx->vcnt++;
-	hab_write_unlock(&ctx->ctx_lock, !ctx->kernel);
-
 	*vcid = vchan->id;
+	hab_write_unlock(&ctx->ctx_lock, !ctx->kernel);
 
 	return 0;
 }
-- 
GitLab

