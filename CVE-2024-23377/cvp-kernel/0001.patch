From 72262319a2c2bb30825e1bcf275219a6c0e2dc2d Mon Sep 17 00:00:00 2001
From: Pulkit Singh Tak <quic_ptak@quicinc.com>
Date: Mon, 22 Jan 2024 14:02:53 +0530
Subject: [PATCH] msm: eva: Use error checked property num

When copying sys property set/read commands from user to kernel,
the error checked property number could be re-written by user. It
invalidated the earlier check and may cause out-of-boundary write.

Change-Id: I6c43905d53bb4638cb2bf35e92ce881911756b85
Signed-off-by: Pulkit Singh Tak <quic_ptak@quicinc.com>
---
 msm/eva/msm_cvp_ioctl.c | 13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)

diff --git a/msm/eva/msm_cvp_ioctl.c b/msm/eva/msm_cvp_ioctl.c
index 2e94014..9159c87 100644
--- a/msm/eva/msm_cvp_ioctl.c
+++ b/msm/eva/msm_cvp_ioctl.c
@@ -1,6 +1,7 @@
 // SPDX-License-Identifier: GPL-2.0-only
 /*
  * Copyright (c) 2018-2021, The Linux Foundation. All rights reserved.
+ * Copyright (c) 2024 Qualcomm Innovation Center, Inc. All rights reserved.
  */
 
 #include <linux/compat.h>
@@ -63,14 +64,14 @@ static int _get_fence_pkt_hdr_from_user(struct cvp_kmd_arg __user *up,
 /* Size is in unit of u32 */
 static int _copy_pkt_from_user(struct cvp_kmd_arg *kp,
 		struct cvp_kmd_arg __user *up,
-		unsigned int size)
+		unsigned int start, unsigned int size)
 {
 	struct cvp_kmd_hfi_packet *k, *u;
 	int i;
 
 	k = &kp->data.hfi_pkt;
 	u = &up->data.hfi_pkt;
-	for (i = 0; i < size; i++)
+	for (i = start; i < size; i++)
 		if (get_user(k->pkt_data[i], &u->pkt_data[i]))
 			return -EFAULT;
 
@@ -158,13 +159,13 @@ static int _copy_sysprop_from_user(struct cvp_kmd_arg *kp,
 	if (get_user(k->prop_num, &u->prop_num))
 		return -EFAULT;
 
-	if (k->prop_num < 1 || k->prop_num > 32) {
+	if (k->prop_num < 1 || k->prop_num > MAX_KMD_PROP_NUM_PER_PACKET) {
 		dprintk(CVP_ERR, "Num of prop out of range %d\n", k->prop_num);
 		return -EFAULT;
 	}
 
-	return _copy_pkt_from_user(kp, up,
-		(k->prop_num*((sizeof(struct cvp_kmd_sys_property)>>2)+1)));
+	return _copy_pkt_from_user(kp, up, 1,
+		(k->prop_num * ((sizeof(struct cvp_kmd_sys_property) >> 2))));
 }
 
 static int _copy_pkt_to_user(struct cvp_kmd_arg *kp,
@@ -364,7 +365,7 @@ static int convert_from_user(struct cvp_kmd_arg *kp,
 			return -EFAULT;
 		}
 
-		rc = _copy_pkt_from_user(kp, up, (pkt_hdr.size >> 2));
+		rc = _copy_pkt_from_user(kp, up, 0, (pkt_hdr.size >> 2));
 		break;
 	}
 	case EVA_KMD_SEND_FENCE_CMD_PKT:
-- 
GitLab

