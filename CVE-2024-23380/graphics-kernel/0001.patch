From 919306871384731b35cbfafb208bbd13bff08605 Mon Sep 17 00:00:00 2001
From: Kamal Agrawal <quic_kamaagra@quicinc.com>
Date: Thu, 21 Dec 2023 15:05:13 +0530
Subject: [PATCH] msm: kgsl: Hold mutex lock while mapping VBO buffer

Currently, VBO buffers are mapped after releasing the
target memdesc's mutex lock. This could introduce a
race which can lead to use after free of VBO buffers.
Thus, map VBO buffers inside mutex lock.

Change-Id: I79e6f446005245aac56bb799585dcc1e523da5ff
Signed-off-by: Kamal Agrawal <quic_kamaagra@quicinc.com>
---
 kgsl_vbo.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/kgsl_vbo.c b/kgsl_vbo.c
index c9cd1c59..aead43fc 100644
--- a/kgsl_vbo.c
+++ b/kgsl_vbo.c
@@ -201,6 +201,11 @@ static int kgsl_memdesc_add_range(struct kgsl_mem_entry *target,
 		}
 	}
 
+	ret = kgsl_mmu_map_child(memdesc->pagetable, memdesc, start,
+			&entry->memdesc, offset, last - start + 1);
+	if (ret)
+		goto error;
+
 	/* Add the new range */
 	interval_tree_insert(&range->range, &memdesc->ranges);
 
@@ -208,8 +213,7 @@ static int kgsl_memdesc_add_range(struct kgsl_mem_entry *target,
 		range->entry, bind_range_len(range));
 	mutex_unlock(&memdesc->ranges_lock);
 
-	return kgsl_mmu_map_child(memdesc->pagetable, memdesc, start,
-			&entry->memdesc, offset, last - start + 1);
+	return ret;
 
 error:
 	kgsl_mem_entry_put(range->entry);
-- 
GitLab

