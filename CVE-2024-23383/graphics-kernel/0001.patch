From 40e781613ca3e821690cb0527f07ca0b874cacf9 Mon Sep 17 00:00:00 2001
From: Harshdeep Dhatt <quic_hdhatt@quicinc.com>
Date: Tue, 16 Jan 2024 16:58:01 -0700
Subject: [PATCH] kgsl: hwfence: Take detached context refcount

When we encounter a failure during context detach, we move the
pending hardware fences from this context to a list. After
reset is complete, we trigger these fences one by one. As part of
freeing these hardware fences, we decrement the drawctxt's
hw_fence count. This can cause a use-after-free of the drawctxt
structure since this context is already detached and may have
been freed. To fix this, take the context refcount for each of
these hardware fences in the detach path, and put them back when
each of these hardware fences are triggered after recovery.

Change-Id: I3077be6b07cc55c77329c06330433d9ece9569c8
Signed-off-by: Harshdeep Dhatt <quic_hdhatt@quicinc.com>
(cherry picked from commit 7c93a922529eff5b1ef5a0fa76afb6a0a39b7a1f)
(cherry picked from commit 09a10f7cfbf9764ac872afa5dee4f521779b3e22)
(cherry picked from commit d73d8b00b339277bd61479c8681a7f9c7fcfbb46)
---
 adreno_gen7_hwsched.c     | 7 ++++++-
 adreno_gen7_hwsched_hfi.c | 4 +++-
 2 files changed, 9 insertions(+), 2 deletions(-)

diff --git a/adreno_gen7_hwsched.c b/adreno_gen7_hwsched.c
index dbe977cb..dbc9d51c 100644
--- a/adreno_gen7_hwsched.c
+++ b/adreno_gen7_hwsched.c
@@ -1,7 +1,7 @@
 // SPDX-License-Identifier: GPL-2.0-only
 /*
  * Copyright (c) 2021, The Linux Foundation. All rights reserved.
- * Copyright (c) 2022-2023, Qualcomm Innovation Center, Inc. All rights reserved.
+ * Copyright (c) 2022-2024, Qualcomm Innovation Center, Inc. All rights reserved.
  */
 
 #include <linux/clk.h>
@@ -1532,6 +1532,7 @@ static int process_detached_hw_fences_after_reset(struct adreno_device *adreno_d
 {
 	struct adreno_hw_fence_entry *entry, *tmp;
 	struct gen7_hwsched_hfi *hfi = to_gen7_hwsched_hfi(adreno_dev);
+	struct kgsl_context *context = NULL;
 	int ret = 0;
 
 	list_for_each_entry_safe(entry, tmp, &hfi->detached_hw_fence_list, node) {
@@ -1545,7 +1546,11 @@ static int process_detached_hw_fences_after_reset(struct adreno_device *adreno_d
 		if (ret)
 			return ret;
 
+		context = &entry->drawctxt->base;
+
 		gen7_remove_hw_fence_entry(adreno_dev, entry);
+
+		kgsl_context_put(context);
 	}
 
 	return ret;
diff --git a/adreno_gen7_hwsched_hfi.c b/adreno_gen7_hwsched_hfi.c
index 907e44bd..fe121592 100644
--- a/adreno_gen7_hwsched_hfi.c
+++ b/adreno_gen7_hwsched_hfi.c
@@ -1,7 +1,7 @@
 // SPDX-License-Identifier: GPL-2.0-only
 /*
  * Copyright (c) 2021, The Linux Foundation. All rights reserved.
- * Copyright (c) 2022-2023, Qualcomm Innovation Center, Inc. All rights reserved.
+ * Copyright (c) 2022-2024, Qualcomm Innovation Center, Inc. All rights reserved.
  */
 
 #include <dt-bindings/soc/qcom,ipcc.h>
@@ -3010,6 +3010,7 @@ static void move_detached_context_hardware_fences(struct adreno_device *adreno_d
 		struct gmu_context_queue_header *hdr =  drawctxt->gmu_context_queue.hostptr;
 
 		if ((timestamp_cmp((u32)entry->cmd.ts, hdr->out_fence_ts) > 0)) {
+			_kgsl_context_get(&drawctxt->base);
 			list_move_tail(&entry->node, &hfi->detached_hw_fence_list);
 			continue;
 		}
@@ -3019,6 +3020,7 @@ static void move_detached_context_hardware_fences(struct adreno_device *adreno_d
 
 	/* Also grab all the hardware fences which were never sent to GMU */
 	list_for_each_entry_safe(entry, tmp, &drawctxt->hw_fence_list, node) {
+		_kgsl_context_get(&drawctxt->base);
 		list_move_tail(&entry->node, &hfi->detached_hw_fence_list);
 	}
 }
-- 
GitLab

