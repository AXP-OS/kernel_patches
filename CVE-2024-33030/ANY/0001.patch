From bbc6f952e4bbabf6aa31a00e2a523b3f5dde918f Mon Sep 17 00:00:00 2001
From: simran jaiswal <quic_simranja@quicinc.com>
Date: Mon, 11 Dec 2023 15:16:55 +0530
Subject: [PATCH] drivers: soc: qcom: Fixing overflow issue in LPLH

Fixing issue of overflow while parsing init ipc freq
table parameters for LPLH.

Change-Id: I99529564cf479a6060a406c8703abb4ff832054d
Signed-off-by: simran jaiswal <quic_simranja@quicinc.com>
---
 drivers/soc/qcom/msm_performance.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/drivers/soc/qcom/msm_performance.c b/drivers/soc/qcom/msm_performance.c
index adde81c188de5..72c81624dee6a 100644
--- a/drivers/soc/qcom/msm_performance.c
+++ b/drivers/soc/qcom/msm_performance.c
@@ -1,7 +1,7 @@
 // SPDX-License-Identifier: GPL-2.0-only
 /*
  * Copyright (c) 2016-2021, The Linux Foundation. All rights reserved.
- * Copyright (c) 2022 Qualcomm Innovation Center, Inc. All rights reserved.
+ * Copyright (c) 2023 Qualcomm Innovation Center, Inc. All rights reserved.
  */
 
 #include <linux/init.h>
@@ -1725,7 +1725,7 @@ static int init_lplh_notif(const char *buf)
 		return -EINVAL;
 	cp = buf;
 	if (sscanf(cp, INIT ":%hu", &nClusters)) {
-		if (!nClusters)
+		if (!nClusters || nClusters > LPLH_CLUSTER_MAX_CNT)
 			return -EINVAL;
 
 		*ptmp++ = nClusters;
@@ -1765,7 +1765,7 @@ static int init_lplh_notif(const char *buf)
 				while ((cp1 = strpbrk(cp1 + 1, ",")))
 					nValues++;
 
-				if (nValues % 2 != 0)
+				if (nValues % 2 != 0 || LPLH_IPC_FREQ_VTBL_MAX_CNT < nValues/2)
 					return -EINVAL;
 
 				*ptmp++ = nValues/2;
-- 
GitLab

