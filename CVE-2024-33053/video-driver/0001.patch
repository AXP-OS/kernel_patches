From f1b7dbbc6d693f3d887df00c2dc56588ebae896d Mon Sep 17 00:00:00 2001
From: Vasantha Balla <quic_vballa@quicinc.com>
Date: Fri, 2 Feb 2024 17:39:43 +0530
Subject: [PATCH] msm: vidc: Fix possible UAF during buffer unregister call

[1] During buffer unregister, CVP buffer lock is released immediately
after finding buffer in register buffer list. UAF might happen if two
threads execute same unregister command as buffer free happens after
unregister done.
[2] Hold CVP buffer lock through out in unregister and unregister done
calls.

Change-Id: I8b6734410369ab990081c558ba846b6dfbfc8588
Signed-off-by: Vasantha Balla <quic_vballa@quicinc.com>
---
 msm/vidc/msm_cvp_internal.c | 6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

diff --git a/msm/vidc/msm_cvp_internal.c b/msm/vidc/msm_cvp_internal.c
index 82fc710a..65523ebe 100644
--- a/msm/vidc/msm_cvp_internal.c
+++ b/msm/vidc/msm_cvp_internal.c
@@ -142,7 +142,6 @@ void handle_session_unregister_buffer_done(enum hal_command_response cmd,
 			break;
 		}
 	}
-	mutex_unlock(&inst->cvpbufs.lock);
 	if (!found) {
 		s_vpr_e(inst->sid, "%s: client_data %x not found\n",
 			__func__, response->data.unregbuf.client_data);
@@ -164,12 +163,11 @@ void handle_session_unregister_buffer_done(enum hal_command_response cmd,
 	data[3] = cbuf->buf.offset;
 	v4l2_event_queue_fh(&inst->event_handler, &event);
 
-	mutex_lock(&inst->cvpbufs.lock);
 	list_del(&cbuf->list);
-	mutex_unlock(&inst->cvpbufs.lock);
 	kfree(cbuf);
 	cbuf = NULL;
 exit:
+	mutex_unlock(&inst->cvpbufs.lock);
 	s_vpr_l(inst->sid, "handled: SESSION_UNREGISTER_BUFFER_DONE\n");
 	put_inst(inst);
 }
@@ -432,7 +430,6 @@ static int msm_cvp_unregister_buffer(struct msm_vidc_inst *inst,
 			break;
 		}
 	}
-	mutex_unlock(&inst->cvpbufs.lock);
 	if (!found) {
 		print_client_buffer(VIDC_ERR, "invalid", inst, buf);
 		return -EINVAL;
@@ -450,6 +447,7 @@ static int msm_cvp_unregister_buffer(struct msm_vidc_inst *inst,
 	if (rc)
 		print_cvp_buffer(VIDC_ERR, "unregister failed", inst, cbuf);
 
+	mutex_unlock(&inst->cvpbufs.lock);
 	return rc;
 }
 
-- 
GitLab

