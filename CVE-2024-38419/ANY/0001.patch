From fd2ad7a27f957b7d52a7a94f24a8036316579e06 Mon Sep 17 00:00:00 2001
From: Jun Zhang <quic_juzhan@quicinc.com>
Date: Wed, 22 May 2024 11:24:33 +0800
Subject: [PATCH] soc: hgsl: fix mem_node UAF issue

In hgsl_ioctl_mem_map_smmu and hgsl_ioctl_mem_alloc, after
adding mem_node into realted list and unlocking the
priv->lock, mem_node may be delete immediately,so
hgsl_trace_gpu_mem_total using mem_node may cause UAF issue.
Move the hgsl_trace_gpu_mem_total into lock to avoid.

Change-Id: I1f3b271c05e33e074d888af477d5448137b46c0e
Signed-off-by: Jun Zhang <quic_juzhan@quicinc.com>
Signed-off-by: nirmp <quic_nirmp@quicinc.com>
---
 drivers/soc/qcom/hgsl/hgsl.c | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/drivers/soc/qcom/hgsl/hgsl.c b/drivers/soc/qcom/hgsl/hgsl.c
index 3e1da3e9bf6d0..b249b10d95a78 100644
--- a/drivers/soc/qcom/hgsl/hgsl.c
+++ b/drivers/soc/qcom/hgsl/hgsl.c
@@ -1865,8 +1865,8 @@ static int hgsl_ioctl_mem_alloc(struct file *filep, unsigned long arg)
 	}
 	mutex_lock(&priv->lock);
 	list_add(&mem_node->node, &priv->mem_allocated);
-	mutex_unlock(&priv->lock);
 	hgsl_trace_gpu_mem_total(priv, mem_node->memdesc.size64);
+	mutex_unlock(&priv->lock);
 
 out:
 	if (ret && mem_node) {
@@ -2036,9 +2036,8 @@ static int hgsl_ioctl_mem_map_smmu(struct file *filep, unsigned long arg)
 		}
 		mutex_lock(&priv->lock);
 		list_add(&mem_node->node, &priv->mem_mapped);
-		mutex_unlock(&priv->lock);
-
 		hgsl_trace_gpu_mem_total(priv, mem_node->memdesc.size64);
+		mutex_unlock(&priv->lock);
 	}
 
 out:
-- 
GitLab

