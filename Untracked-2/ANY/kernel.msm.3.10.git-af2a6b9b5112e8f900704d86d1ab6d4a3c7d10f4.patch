From af2a6b9b5112e8f900704d86d1ab6d4a3c7d10f4 Mon Sep 17 00:00:00 2001
From: Hemant Kumar <hemantk@codeaurora.org>
Date: Thu, 29 May 2014 16:05:51 -0700
Subject: [PATCH] usb: core: Fix use after free for hub usb device

There is a possibility of root hub usb device being
freed as part of controller driver unbind and hub
thread trying to access root hub usb device. Hence
increment the usb device reference count before
accessing it by hub thread.

CRs-Fixed: 671581
Change-Id: Icf1297452e55a4ca0acd67075320f7a32929a1b3
Signed-off-by: Hemant Kumar <hemantk@codeaurora.org>
---
 drivers/usb/core/hub.c |   10 ++++++++++
 1 files changed, 10 insertions(+), 0 deletions(-)

diff --git a/drivers/usb/core/hub.c b/drivers/usb/core/hub.c
index 6834092..07f3272 100644
--- a/drivers/usb/core/hub.c
+++ b/drivers/usb/core/hub.c
@@ -4734,6 +4734,14 @@ static void hub_events(void)
 
 		hub = list_entry(tmp, struct usb_hub, event_list);
 		kref_get(&hub->kref);
+
+		/* make sure hdev is not freed before accessing it */
+		if (hub->disconnected) {
+			spin_unlock_irq(&hub_event_lock);
+			goto hub_disconnected;
+		} else {
+			usb_get_dev(hub->hdev);
+		}
 		spin_unlock_irq(&hub_event_lock);
 
 		hdev = hub->hdev;
@@ -4949,6 +4957,8 @@ static void hub_events(void)
 		usb_autopm_put_interface(intf);
  loop_disconnected:
 		usb_unlock_device(hdev);
+		usb_put_dev(hdev);
+ hub_disconnected:
 		kref_put(&hub->kref, hub_release);
 
         } /* end while (1) */
-- 
1.7.8.3

